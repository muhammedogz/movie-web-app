{"version":3,"sources":["components/Footer.js","components/Header.js","components/Hero.js","components/MovieCard.js","components/Movie.js","components/Movies.js","components/Content.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","Header","useState","isActive","setIsActive","handleClick","src","process","alt","onClick","to","Hero","MovieCard","props","movie_id","movie","genres","setGenres","players","setPlayers","useEffect","fetch","then","res","json","data","cast","img","poster_path","style","backgroundImage","show","vote_average","title","release_date","map","genre","name","id","overview","filter","player","profile_path","Movie","showMovieCard","setShowMovieCard","Movies","movies","Content","setMovies","getMovies","a","fetchMovies","moviesFromServer","temp","results","page","About","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1974ebe9.chunk.js","sourcesContent":["import './Footer.css'\n\nconst Footer = () => {\n    return (\n        <footer className='Footer'>\n            <div className=\"container\">\n                <p>Copyright &copy; 2021</p>\n                <p>All Rights Reserved</p>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer\n","import { Link } from \"react-router-dom\"\nimport  React, { useState } from \"react\";\nimport \"./Header.css\"\n\nconst Header = () => {\n\n    // set an initial state for active link\n    const [isActive, setIsActive] = useState(false);\n\n    const handleClick = () => {\n        setIsActive(!isActive);\n    }\n\n    return (\n        <header className=\"Header\">\n            <nav className=\"Header-nav container\">\n                <img className=\"Header-logo\" src={process.env.PUBLIC_URL + '/icon.png'} alt=\"maim logo\"></img>\n                <ul className=\"Header-ul\">\n                    <li><Link onClick={handleClick} className={isActive === false ? \"Header-active\" : \"\"} to=\"/movie-web-app\">Home</Link></li>\n                    <li><Link onClick={handleClick} className={isActive === true ? \"Header-active\" : \"\"} to=\"/movie-web-app/about\">About</Link></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\nexport default Header\n","import \"./Hero.css\"\n\nconst Hero = () => {\n    return (\n        <div className=\"Hero\">\n            <div className=\"container\">\n                <h1>Awesome Movie App</h1>\n                <h3>Look every information for your Favorite Movie!</h3>\n                <h3>In No Seconds!</h3>\n            </div>\n        </div>\n    )\n}\n\nexport default Hero\n","import React, {useState, useEffect} from 'react';\nimport \"./MovieCard.css\"\n\n\nconst MovieCard = (props) => {\n    const movie_id = props.movie_id;\n    const movie = props.movie;\n\n    const [genres, setGenres] = useState([]);\n    const [players, setPlayers] = useState([]);\n\n    // get players and genre info from API\n    useEffect(() => {\n        fetch(`https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=738d84b4c807f67e7b3e99f34f54a601`)\n        .then(res => res.json())\n        .then(data => {\n            setPlayers(data.cast);\n        })\n    }, [movie_id]);\n\n    useEffect(() => {\n        fetch(`https://api.themoviedb.org/3/movie/${movie_id}?api_key=738d84b4c807f67e7b3e99f34f54a601&language=en-US`)\n        .then(res => res.json())\n        .then(data => {\n            setGenres(data.genres);\n        })\n    }, [movie_id]);\n    \n    const img = \"https://image.tmdb.org/t/p/w500/\" + movie.poster_path;\n    // style={{backgroundImage:`url(${img})`}} \n    \n\n    return (\n        <div style={{backgroundImage:`url(${img})`}} \n        className=\"MovieCard\" >\n            <button className=\"MovieCard-close-btn\" onClick={props.show} >X</button>\n            <div className=\"MovieCard-container\">\n                <div className=\"MovieCard-hero\">\n                    <div className=\"MovieCard-hero-first\">\n                        <p className=\"MovieCard-score\">{movie.vote_average}</p>\n                        <div className=\"MovieCard-img\">\n                            <img src={img} alt={movie.title}></img>\n                        </div>\n                    </div>\n                    <div className=\"MovieCard-hero-second\">\n                        <div className=\"MovieCard-title\">\n                            <h2>{movie.title}</h2>\n                        </div>\n                        <div className=\"MovieCard-date\">\n                            <p>Release Date:{movie.release_date}</p>\n                        </div>\n                        <div className=\"MovieCard-genres\">\n                            <h3>Genres</h3>\n                            {genres.map(genre => (\n                                <span key={genre.id}>{genre.name}</span>\n                            ))}\n                        </div>\n                        <div className=\"MovieCard-overview\">\n                            <h3>Overview</h3>\n                            <p>{movie.overview}</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"MovieCard-cast\">\n                        <h3>Cast</h3>\n                        <div className=\"MovieCard-casts\">\n                            {players.filter(player => player.profile_path).map(player => (\n                                <div key={player.id} className=\"MovieCard-cast-item\">\n                                    <img src={`https://image.tmdb.org/t/p/w500/${player.profile_path}`} alt={player.name}/>\n                                    <p>{player.name}</p>\n                                </div>\n                            ))}\n                            \n                        </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MovieCard\n\n// return (\n//     <div className=\"movie-card\">\n//         <div className=\"movie-card-image\">\n//             <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.title}/>\n//         </div>\n//         <div className=\"movie-card-info\">\n//             <div className=\"movie-card-title\">\n//                 <h2>{movie.title}</h2>\n//             </div>\n//             <div className=\"movie-card-genres\">\n//                 {genres.map(genre => (\n//                     <span key={genre.id}>{genre.name}</span>\n//                 ))}\n//             </div>\n//             <div className=\"movie-card-overview\">\n//                 <p>{movie.overview}</p>\n//             </div>\n//             <div className=\"movie-card-cast\">\n//                 {players.map(player => (\n//                     <div key={player.id} className=\"movie-card-cast-item\">\n//                         <img src={`https://image.tmdb.org/t/p/w500/${player.profile_path}`} alt={player.name}/>\n//                         <p>{player.name}</p>\n//                     </div>\n//                 ))}\n//             </div>\n//         </div>\n//     </div>\n// )","import  React, { useState } from \"react\";\nimport MovieCard from \"./MovieCard\";\nimport \"./Movie.css\"\n\nconst Movie = (props) => {\n\n    // set initial state for every movie before clicked\n    // when clicked, render movieCard component\n    const [ showMovieCard, setShowMovieCard ] = useState(false);\n\n    const handleClick = () => {\n        setShowMovieCard(!showMovieCard);\n    }\n\n    const movie = props.movie;\n\n    const img = \"https://image.tmdb.org/t/p/w500/\" + movie.poster_path;\n    // style={{backgroundImage:`url(${img})`}} \n    return (\n        <>\n        {showMovieCard && <MovieCard movie={movie} movie_id={movie.id} show={handleClick} />}\n        <div className=\"Movie\" onClick={handleClick}>\n            <p className=\"Movie-score\">{movie.vote_average}</p>\n            <img className=\"Movie-img\" src={img} alt={movie.overview}></img>\n            <p className=\"Movie-name\">{movie.title}</p>\n            <p className=\"Movie-release\">{movie.release_date}</p>\n        </div>\n        </>\n    )\n}\n\nexport default Movie\n","import Movie from './Movie'\nimport \"./Movies.css\"\n\nconst Movies = ( movies ) => {\n    movies = movies.movies;\n\n    return (\n        <div className=\"Movies container\">\n            <h2>Popular Movies</h2>\n            <div className=\"Movies-all\">\n                {movies.map(movie => (\n                    <Movie key={movie.id} movie={movie} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Movies\n","import {useState, useEffect} from 'react';\nimport Hero from \"./Hero\"\nimport Movies from \"./Movies\"\n\nconst Content = () => {\n    const [movies, setMovies] = useState([]);\n    \n\n    // get movie info from API\n    useEffect(() => {\n        const getMovies = async () => {\n          const moviesFromServer = await fetchMovies(1)\n          \n          const temp = moviesFromServer.results.map(movie => {\n              return {\n                    id: movie.id,\n                    title: movie.title,\n                    poster_path: movie.poster_path,\n                    overview: movie.overview,\n                    release_date: movie.release_date,\n                    vote_average: movie.vote_average\n              }\n          })\n          setMovies(temp)\n        }\n    \n        getMovies()\n      }, [])\n\n    // Fetch Movies\n    const fetchMovies = async (page) => {\n        const res = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=738d84b4c807f67e7b3e99f34f54a601&language=en-US&page=${page}`)\n        const data = await res.json()\n\n        return data\n    }\n\n\n    return (\n        <main>\n            <Hero />\n            <Movies movies={movies}/>\n        </main>\n    )\n}\n\nexport default Content\n","import \"./About.css\"\n\n\nconst About = () => {\n    return (\n        <div className=\"About\">\n            <div className=\"About-info\">\n                <h3>About</h3>\n                <p>Author: Muhammed Oğuz</p>\n                <p>Version: 1.0</p>\n                <p>Hello Appcent 😊</p>\n            </div>\n        </div>\n    )\n}\n\nexport default About\n","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\"\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Content from './components/Content';\nimport About from './components/About';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <Router>\n        <Header />\n\n        <Routes>\n          <Route path=\"/movie-web-app/\" element={<Content />} />\n        </Routes>\n        <Routes>\n          <Route path=\"/movie-web-app/about\" element={<About />} />\n        </Routes>\n\n        <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}